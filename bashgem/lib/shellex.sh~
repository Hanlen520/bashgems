tmp=/tmp/${USER}_tmp


defineY()
{
	set |grep "^$1="
}

:<<seven_getopt_help
class:basic
user:yansheng.huangys
date:200910302209
cat:bash
seven_getopt -p 1 -s 2 -d 
then the result is 
p=1 s=2 d=""
so you can use it in your functions for parameters parsing
seven_getopt_help
seven_getopt()
{
	local kkk vvv count=$# i
	#while [[ -n "$1" ]]
	for((i=1;i<=$count;i++))
	do
		[[ -z "$1" ]] && shift && continue
		kkk="${1:1}"
		if [[ "${1:0:1}" = '-' && "$1" == -[a-zA-Z]* ]]
		then		
			eval "$kkk=\"${2//\"/\\\"}\""  #unset the var and set value to it
		fi
		shift;
	done
}


:<<sss_help
class:cmd
sss  #enter a screen with color promotion
sss -u dinglh
sss -s session_name
sss_help
exscreen()
{
	unset -v u s l
	seven_getopt "$@"
	[[ -n $u ]] &&
	{
		local sss_user=$u
		local screen

		for screen in  ~/QA/bin/screen /home/$sss_user/QA/bin/screen `whereis screen|grep -o '[/a-zA-Z]*screen$'`
		do
			if [[ -f $screen ]]  
			then
				echo $screen -rx $sss_user/$sss_user
				$screen -rx $sss_user/$sss_user && return
				ls --color=tty -l $screen | grep "s.*root root" || echo "you should eval such cmd below for multiuser support
				sudo chown root:root $screen;sudo chmod +s $screen; 

				"
			fi

		done
		return
	}


	defineY l && { screen -ls;return; } 

	[[ -z $screen_share_users ]] && export screen_share_users=`last|grep pts|awk '{print $1}'|sort|uniq`

	local u screen_share_users_cmd
	for u in $screen_share_users
	do
		screen_share_users_cmd="\nacladd $u\n$screen_share_users_cmd"
	done

	echo -e '
	multiuser on
	'$screen_share_users_cmd'
	hardstatus on
	hardstatus alwayslastline 
	hardstatus string "%{= kG}%-w%{.cW}%n %t%{-}%+w %=%{= kG} %H %{..Y} %Y/%m/%d %c"
	logfile '"/tmp/${USER}_${s:=$USER}.log"'	
	' > $tmp
	echo session_name=$s
	screen -ArxRL ${s:=$USER} -c $tmp -t ${s:=$USER}
}
screen_ex()
{
	exscreen "$@"
}
ps_ex()
{
        ps -o uname,pid,ppid,thcount,ni,pri,psr,pcpu,pmem,rss,vsz,sz,start_time,time,comm,c,command "$@"
}






