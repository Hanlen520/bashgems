#class:basic
#user:yansheng.huangys
#date:200910302209
#cat:bash
#pp -p 1 -s 2 -d 
#then the result is 
#p=1 s=2 d=""
#so you can use it in your functions for parameters parsing
pp()
{
        local kkk vvv count=$# i
        #while [[ -n "$1" ]]
        for((i=1;i<=$count;i++))
        do
                [[ -z "$1" ]] && shift && continue
                kkk="${1:1}"
                if [[ "${1:0:1}" = '-' && "$1" == -[a-zA-Z]* ]]
                then
                        eval "$kkk=\"${2//\"/\\\"}\""  #unset the var and set value to it
                fi
                shift;
        done
}


bashgems_install()
{
	mkdir -p $BASHGEMS_HOME/bashgem 
	mkdir -p $BASHGEMS_HOME/gems 
	svn co $BASHGEM_SITE $BASHGEMS_HOME/bashgem && \
	#checkout the QA and QA_usr/$USER
	. $BASHGEMS_HOME/bashgem/bin/bashgem.sh
}

baidu_logo()
{
echo '
               ````                               
            `/syyyy+.     ``:/oo+/.               
         ` .shhhhhhhh:   `+hdhhhhhd/`             
          `/hhhhhhhhhs`  shhhhhhhhhh:             
   `````   /hhhhhhhhho`  hhhhhhhhhhy-             
 ./osyso/. `+hhhhhhhs.   /hhhhhhhhs-  `           
-shhhhhhhh/``-/ooo+-`    `-+ssso+-.-/+oo+:.`      
yhhhhhhhhhy:                     `ohdhhhhhhs.     
shhhhhhhhhy:     .-/osoo+:.`     /hhhhhhhhhho     
.shhhhhhhh/`   -+hhhhhhhhhho:`   +hhhhhhhhhhs     
 `:/ooo+/-   .ohhhhhhhhhhhhhhs-` .sdhhhhhhhy:     
      `   .:ohhhhs++ohhhhhhhhhhs:..:osssso/.`     
       `-oyhddhdd/  .hhhdhhhhhhhdyo-`````         
    `:ohhhy+:----.  .hs+++hhhh+++yhhy+-`          
   .ohhhh+``./ooo:  .h/  .hhhh`  ohhhhhy:`        
  `ohhhhh. `+dhhh/  .h/  .hhhh`  ohhhhhhy-        
  `shhhhh+` `:+++-  .h+` `/+++`  ohhhhhhh/        
   -ydhhhhyo:-......:hy+-........ohhhhhho`        
   ``/shhdhhdddmddhhhyyyhhhddddddhhdhhs/`         
       `.-::::--..``` ` ```.--:::::-.`            

'
}
bgem()
{
	local source install uninstall load info list=_ remote=_ update=_  publish=_ m=_
	
	if [[ $# != 0 ]]
	then
		pp "$@"
		if [[ -n "$source" ]]
		then
			GEMS_SITE=$source
		fi
		if [[ -n "$install" ]]
		then
			svn co "$GEMS_SITE/$install" $BASHGEMS_HOME/gems/$install
		fi
		if [[ -n "$uninstall" ]]
		then
			rm $BASHGEMS_HOME/gems/$uninstall -rf 
		fi
		#bgem -update unittest
		#bgem -update 
		if [[ _ != "$update"  && -n "$update" ]]
		then
			svn up $BASHGEMS_HOME/gems/$update
		fi
		if [[ -z "$update"  ]]
		then
			find $BASHGEMS_HOME/gems/ -type d -maxdepth 1  |xargs svn up 
		fi

		#bgem -list
		if [[  "$list" != _  ]]
		then
			if [[ "$remote" != _ ]]
			then
				for s in $GEMS_SITE
				do
					svn list $s
				done
			else
				find $BASHGEMS_HOME/gems/ -type d -maxdepth 1
			fi
		fi
		#bgem -load cpptest
		#bgem -load app/iknow/.init.sh
		if [[ -n "$load" ]]
		then
			[[ -f $BASHGEMS_HOME/gems/$load/$load.sh ]] && . $BASHGEMS_HOME/gems/$load/$load.sh
			[[ -f $BASHGEMS_HOME/gems/$load/.bgem ]] && . $BASHGEMS_HOME/gems/$load/.bgem
		fi
		if [[ -n "$info" ]]
		then
			svn log $BASHGEMS_HOME/gems/$info
		fi
		if [[  "$publish" != _ && "$m" != _ ]]
		then
			cd $publish && cd $OLDPWD || { echo "Error $publish , is it write?";return; }
			gem_name=`echo $OLDPWD|awk -F/ '{print $NF}'`
			echo "run this commond to publish"
			echo svn import $publish "$GEMS_SITE/$gem_name" -m \"$m\"
		fi
	else
		echo '
		bgem -list
		bgem -install btest
		bgem -uninstall btest
		bgem -source http://www.git.com
		'
	fi
}

bashgem()
{
	bgem "$@"
}

bgem_init()
{
	baidu_logo
	echo "Wiki: http://ecmp.baidu.com/page/site/septech/wiki-page#title=BashGems&mode=view&anchor="
	echo "Gems: https://svn.baidu.com/app-test/search/sep/trunk/bashgems/gems"
	echo 'bashgem loaded'
	[[ -f $BASHGEMS_HOME/bashgem/lib/shellex.sh ]] && . $BASHGEMS_HOME/bashgem/lib/shellex.sh
	#[[ -d $BASHGEMS_HOME/gems/ruby ]] && bgem -load ruby
	:
}

#########################
[[ -z "$BASHGEMS_HOME" ]] && export BASHGEMS_HOME=~/.bashgems
#export BASHGEMS_SITE=https://sihanjishu.googlecode.com/svn/trunk/bashgems/
export GEMS_SITE='https://svn.baidu.com/app-test/search/sep/trunk/bashgems/gems/'
export BASHGEM_SITE='https://svn.baidu.com/app-test/search/sep/trunk/bashgems/bashgem'
bgem_init "$@"
:
